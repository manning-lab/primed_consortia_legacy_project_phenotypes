---
title: "Install_CDM_and_Vocabularies"
format: html
editor: visual
---

## Resources and References

<https://github.com/OHDSI/CommonDataModel/tree/v5.4>

# Prerequisites

Install DatabaseConnector and SqlRender packages

Prerequisites for DatabaseConnector and SqlRender packages: https://github.com/ohdsi/DatabaseConnector?tab=readme-ov-file#installation

-   Setting up the R environment \[[link](https://ohdsi.github.io/Hades/rSetup.html)\]

    -   XCODE - verified installed correctly

        ```         
        amanning@wm6ad-0b7 ~ % clang
        clang: error: no input files
        amanning@wm6ad-0b7 ~ % 
        ```

    -   Download and install the gfortran compiler `gfortran-12.2-universal.pkg`

```{r setup1, eval=FALSE}
usethis::edit_r_makevars()
```

```         
F77 = /opt/gfortran/bin/gfortran
FC = /opt/gfortran/bin/gfortran
FLIBS=-L /opt/gfortran/lib
```

-   Install [XQuartz](https://www.xquartz.org/)

-   Verify that build tools are installed and available by opening an R console and running- verified!

```{r setup2, eval=FALSE}
install.packages("pkgbuild")
pkgbuild::check_build_tools()

```

-   Installing Java [link](https://www.oracle.com/java/technologies/javase-jdk15-downloads.html)

## Install SQLRender and Verify Installation

```{r setup3, eval=FALSE}
#install.packages("SqlRender", dependencies = TRUE)
library(SqlRender)
translate("SELECT TOP 10 * FROM person;", "postgresql")
```

## Install DatabaseConnector

```{r setup4, eval=FALSE}
install.packages("DatabaseConnector")

```

## Install SQLlite

```{r setup5, eval=FALSE}
install.packages("RSQLite")

```

Set up Github Personal Access Token

```{r setup6, eval=FALSE}
install.packages("usethis")
library(usethis)
create_github_token(scopes = c("(no scope)"), description = "R:GITHUB_PAT", host = "https://github.com")
```

Add PAT to .Renviron

```{r setup7, eval=FALSE}
edit_r_environ()

```

# Install CDM 5.4.0

```{r setup8, eval=FALSE}
if (!require("devtools")) install.packages("devtools")
devtools::install_github("OHDSI/CommonDataModel")
```

```{r}
CommonDataModel::listSupportedDialects()
CommonDataModel::listSupportedVersions()



```

# Create a database for CDM5.4.0

Documentation:

-   <https://rsqlite.r-dbi.org/>

-   <https://dbi.r-dbi.org/>

## Install Postgre SQL

https://www.postgresql.org/download/

All settings:

```         
Installation Directory: /Library/PostgreSQL/17
Server Installation Directory: /Library/PostgreSQL/17
Data Directory: /Library/PostgreSQL/17/data
Database Port: 5432
Database Superuser: postgres
Operating System Account: postgres
Database Service: postgresql-17
Command Line Tools Installation Directory: /Library/PostgreSQL/17
pgAdmin4 Installation Directory: /Library/PostgreSQL/17/pgAdmin 4
Stack Builder Installation Directory: /Library/PostgreSQL/17
Installation Log: /tmp/install-postgresql.log
```

I created a user called 'primed' with password 'primed'. I created a database called 'primed' with owner 'primed'. I created a schema called 'primed' in the database 'primed'.

Website:[Best Practices in Working with Databases](https://solutions.posit.co/connections/db/)

```{r database1, eval=FALSE}
#install.packages("tidyverse")
library(tidyverse)
```

```{r database2, eval=FALSE}
library(DBI)
library(RPostgreSQL)
library(DatabaseConnector)
downloadJdbcDrivers("postgresql",pathToDriver="./JdbcDrivers/")

```

```{r database3, eval=FALSE}
connectionDetails <- createConnectionDetails(dbms="postgresql", 
                                             user="primed", password="primed", 
                                             server="localhost/primed", port=5432, 
                                             pathToDriver="./JdbcDrivers/")

```

Create connection and test

```{r eval=FALSE}
conn <- connect(connectionDetails)
mytargetdialect <- dbms(connection = conn)
print(mytargetdialect)
disconnect(conn)
```

## Execute the DDL on the database

Do not create KEYs or FKs at first. The DDL sets up the database tables.

```{r eval=FALSE}
CommonDataModel::executeDdl(
  connectionDetails=connectionDetails,
  cdmVersion="5.4",
  cdmDatabaseSchema = "primed",
  executeDdl = TRUE,
  executePrimaryKey = FALSE,
  executeForeignKey = FALSE,
)
```

## Write table contents to the database

### 

### CONCEPT CPT4

The README file states:

```         
CPT4 utility for CDM v5.

This utility will import the CPT4 vocabulary into concept.csv.
Internet connection is required.

Start import process from command line with:
 windows: cpt.bat APIKEY
 linux: ./cpt.sh APIKEY

Use API KEY from UMLS account profile: https://uts.nlm.nih.gov//uts.html#profile
Do not close or shutdown your PC until the end of import process,
it will cause damage to concept.csv file.

Please make sure java allowed to make http requests and has write permission to the concept.csv file.

amanning@wm6ad-0b7 vocabulary_download_v5_{38bddeb0-45da-435f-bb8e-6f34aba2ec5a}_1727651640965 % ./cpt.sh XXXX

WARNING: sun.reflect.Reflection.getCallerClass is not supported. This will impact performance.
[INFO ] 2024-09-30 01:55:10.037 [main] ConceptService - Writing updated data to CONCEPT.csv
Updated CPT4 records:  17455/17455
[INFO ] 2024-09-30 02:53:26.996 [main] ConceptService - Not processed cpt4 concepts: 13553. See logs/not-processed-concepts-09-30-2024-01-55-09.out, file. You can find more information about errors in the logs/logfile.log file
amanning@wm6ad-0b7 vocabulary_download_v5_{38bddeb0-45da-435f-bb8e-6f34aba2ec5a}_1727651640965 % 
```

### CONCEPT

```{r eval=FALSE}

in.concept <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/CONCEPT.csv", 
                         delim="\t",
                         col_types=cols(
                           concept_id = col_integer(),
                           concept_name = col_character(),
                           domain_id = col_character(),
                           vocabulary_id = col_character(),
                           concept_class_id = col_character(),
                           standard_concept = col_character(),
                           concept_code = col_character(),
                           valid_start_date = col_date(format = "%Y%m%d"),
                           valid_end_date = col_date(format = "%Y%m%d"),
                           invalid_reason = col_character()
                         ),na="NULL")

head(in.concept)
conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'concept', value = data.frame(in.concept), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)

rm(in.concept)
```

```{r  eval=FALSE}

in.concept_cpt4 <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/CONCEPT_CPT4.csv", 
                         delim="\t",
                         col_types=cols(
                           concept_id = col_integer(),
                           concept_name = col_character(),
                           domain_id = col_character(),
                           vocabulary_id = col_character(),
                           concept_class_id = col_character(),
                           standard_concept = col_character(),
                           concept_code = col_character(),
                           valid_start_date = col_date(format = "%Y%m%d"),
                           valid_end_date = col_date(format = "%Y%m%d"),
                           invalid_reason = col_character()
                         ),na="NULL")

head(in.concept_cpt4)
conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'concept', value = data.frame(in.concept_cpt4), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)

rm(in.concept_cpt4)
```

### DOMAIN

```{r  eval=FALSE}

in.domain <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/DOMAIN.csv",delim="\t",na="NULL",col_types=cols(
  domain_id = col_character(),
  domain_name = col_character(),
  domain_concept_id = col_integer()
))

head(in.domain)
conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'domain', value = data.frame(in.domain), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)

rm(in.domain)
```

### CONCEPT_CLASS

```{r  eval=FALSE}
in.concept_class <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/CONCEPT_CLASS.csv",
                               col_types=cols(
                                 concept_class_id = col_character(),
                                 concept_class_name = col_character(),
                                 concept_class_concept_id = col_integer()
                               ))
head(in.concept_class)

conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'concept_class', value = data.frame(in.concept_class), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)

rm(in.concept_class)
```

### RELATIONASHIP

```{r  eval=FALSE}
in.relationship <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/RELATIONSHIP.csv", col_types=cols(
  relationship_id = col_character(),
  relationship_name = col_character(),
  is_hierarchical = col_character(),
  defines_ancestry = col_character(),
  reverse_relationship_id = col_character(),
  relationship_concept_id = col_integer()
))
head(in.relationship)

conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'relationship', value = data.frame(in.relationship), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)
```

### DRUG STRENGTH

```{r  eval=FALSE}
in.drug_strength <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/DRUG_STRENGTH.csv", col_types = cols(
  drug_concept_id = col_integer(),
  ingredient_concept_id = col_integer(),
  amount_value = col_double(),
  amount_unit_concept_id = col_integer(),
  numerator_value = col_double(),
  numerator_unit_concept_id = col_integer(),
  denominator_value = col_double(),
  denominator_unit_concept_id = col_integer(),
  box_size = col_integer(),
  valid_start_date = col_date(format = "%Y%m%d"),
  valid_end_date = col_date(format = "%Y%m%d"),
  invalid_reason = col_character()
))
head(in.drug_strength)

conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'drug_strength', value = data.frame(in.drug_strength), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)

rm(in.drug_strength)
```

### VOCABULARY

```{r  eval=FALSE}
in.vocabulary <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/VOCABULARY.csv", col_types = cols(
  vocabulary_id = col_character(),
  vocabulary_name = col_character(),
  vocabulary_reference = col_character(),
  vocabulary_version = col_character(),
  vocabulary_concept_id = col_integer()))
head(in.vocabulary)

conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'vocabulary', value = data.frame(in.vocabulary), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)

rm(in.vocabulary)
```

### CONCEPT_SYNONYM

```{r  eval=FALSE}
in.concept_synonym <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/CONCEPT_SYNONYM.csv",col_types=cols(
  concept_id = col_integer(),
  concept_synonym_name = col_character(),
  language_concept_id = col_integer()
))
head(in.concept_synonym)

conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'concept_synonym', value = data.frame(in.concept_synonym), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)

rm(in.concept_synonym)
```

### CONCEPT_ANCESTER

```{r  eval=FALSE}
in.concept_ancestor <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/CONCEPT_ANCESTOR.csv",col_types=cols(
  ancestor_concept_id = col_integer(),
  descendant_concept_id = col_integer(),
  min_levels_of_separation = col_integer(),
  max_levels_of_separation = col_integer()
))
head(in.concept_ancestor)

conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'concept_ancestor', value = data.frame(in.concept_ancestor), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)

rm(in.concept_ancestor)
```

### CONCEPT_RELATIONSHIP

```{r  eval=FALSE}
in.concept_relationship <- read_delim("vocabulary_download_v5_{d3fc0e41-71fa-4f84-9576-80ed6651d6a5}_1731967602015/CONCEPT_RELATIONSHIP.csv",na="NULL", col_types=cols(
  concept_id_1 = col_integer(),
  concept_id_2 = col_integer(),
  relationship_id = col_character(),
  valid_start_date = col_date(format = "%Y%m%d"),
  valid_end_date = col_date(format = "%Y%m%d"),
  invalid_reason = col_character()
))
head(in.concept_relationship)

conn <- connect(connectionDetails)
dbWriteTable(conn = conn, name = 'concept_relationship', value = data.frame(in.concept_relationship), append = TRUE, header = TRUE, row.names = FALSE)
disconnect(conn)

rm(in.concept_relationship)
```

## Execute the DDL on the database to create KEYs and FKs

```{r  eval=FALSE}
CommonDataModel::executeDdl(
  connectionDetails=connectionDetails,
  cdmVersion="5.4",
  cdmDatabaseSchema = "primed",
  executeDdl = FALSE,
  executePrimaryKey = TRUE,
  executeForeignKey = FALSE,
  
)
```

```{r eval=FALSE}
CommonDataModel::executeDdl(
  connectionDetails=connectionDetails,
  cdmVersion="5.4",
  cdmDatabaseSchema = "primed",
  executeDdl = FALSE,
  executePrimaryKey = FALSE,
  executeForeignKey = TRUE,
  
)
```
